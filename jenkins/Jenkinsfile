pipeline {
    agent any

    environment {
        WEB_IMAGE_NAME = 'thenext/the-next-client'
        STORYBOOK_IMAGE_NAME = 'thenext/the-next-client-storybook'
        WEB_CONTAINER_NAME = 'the-next-client'
        STORYBOOK_CONTAINER_NAME = 'the-next-client-storybook'
        GITHUB_CREDENTIALS_ID = 'bonjin-github'
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checkout Start'
                git branch: 'develop',
                    url: 'https://github.com/the-next-team/the-next-client',
                    credentialsId: GITHUB_CREDENTIALS_ID
            }
        }

        stage('Build Docker Images') {
            parallel {
                stage('Build Web Image') {
                    steps {
                        sh "echo Web Image Build Start"
                        sh "docker build -f Dockerfile.web . -t ${WEB_IMAGE_NAME}"
                    }
                    post {
                        success {
                            sh 'echo "Build Web Docker Image Success"'
                        }
                        failure {
                            sh 'echo "Build Web Docker Image Fail"'
                        }
                    }
                }
                stage('Build Storybook Image') {
                    steps {
                        sh "echo Storybook Image Build Start"
                        sh "docker build -f Dockerfile.storybook . -t ${STORYBOOK_IMAGE_NAME}"
                    }
                    post {
                        success {
                            sh 'echo "Build Storybook Docker Image Success"'
                        }
                        failure {
                            sh 'echo "Build Storybook Docker Image Fail"'
                        }
                    }
                }
            }
        }

        stage('Deploy') {
            parallel {
                stage('Deploy Web') {
                    steps {
                        echo 'Deploy Web Start'
                        sh "docker stop ${WEB_CONTAINER_NAME} || true && docker rm ${WEB_CONTAINER_NAME} || true"
                        sh "docker run -d --name ${WEB_CONTAINER_NAME} -p 3080:80 ${WEB_IMAGE_NAME}"
                    }
                }
                stage('Deploy Storybook') {
                    steps {
                        echo 'Deploy Storybook Start'
                        sh "docker stop ${STORYBOOK_CONTAINER_NAME} || true && docker rm ${STORYBOOK_CONTAINER_NAME} || true"
                        sh "docker run -d --name ${STORYBOOK_CONTAINER_NAME} -p 6006:6006 ${STORYBOOK_IMAGE_NAME}"
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        success {
            echo 'Pipeline succeeded.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
